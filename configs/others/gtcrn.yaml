model: "gtcrn"
model_kwargs:
    n_fft: 512
    hop_size: 256
    win_size: 512
    input_compression: 0.3
data:
    dataset: VoiceBank-Demand
    train:
        clean_dir: "/home/shahn/Datasets/voicebank-demand/16k/clean_trainset_28spk_wav"
        noisy_dir: "/home/shahn/Datasets/voicebank-demand/16k/noisy_trainset_28spk_wav"
        metadata: "/home/shahn/Datasets/voicebank-demand/logfiles/log_trainset_28spk.txt"
        segment_size: 32000
    valid:
        clean_dir: "/home/shahn/Datasets/voicebank-demand/16k/clean_testset_wav"
        noisy_dir: "/home/shahn/Datasets/voicebank-demand/16k/noisy_testset_wav"
        metadata: "/home/shahn/Datasets/voicebank-demand/logfiles/log_testset.txt"
        segment_size: 32000
    infer:
        clean_dir: "/home/shahn/Datasets/voicebank-demand/16k/clean_testset_wav"
        noisy_dir: "/home/shahn/Datasets/voicebank-demand/16k/noisy_testset_wav"
        files:
            - "p232_013"     # Music
            - "p257_090"     # Outdoor
            - "p232_010"     # Cafe
            - "p257_042"     # Wind
    pesq:
        clean_dir: "/home/shahn/Datasets/voicebank-demand/16k/clean_testset_wav"
        noisy_dir: "/home/shahn/Datasets/voicebank-demand/16k/noisy_testset_wav"
        metadata: "/home/shahn/Datasets/voicebank-demand/logfiles/log_testset.txt"
        segment_size: null
    sampling_rate: 16000
train:
    test: False
    batch_size: 64
    print_interval: 1
    max_epochs: 500
    save_interval: 20
    fp16: False
    num_workers: 2
    persistent_workers: True
    clip_grad: null
    seed: 1
    plot_param_and_grad: True
    losses:
        mag_mse:
            weight: 0.9
        complex_mse:
            weight: 0.2
        phase:
            weight: 0.3
        consistency:
            weight: 0.2
            compression: 0.3
        wav_l1:
            weight: 0.2
        pesq:
            weight: 1.0e-3
    optimizer: "Adam"
    optimizer_kwargs:
        lr: 1.0e-3
        weight_decay: 0.0  # normal weights -> 1e-2
        # wd_ratio: 1.0
        betas: [0.95, 0.999]
    # optimizer_groups:
    #     -
    #         regex_list:     # regular expressions of parameter names
    #             - "encoder\\.en_convs\\.[01]\\.act\\.weight"                # prelu
    #             - "encoder\\.en_convs\\.[234]\\.(point|depth)_act\\.weight" # prelu
    #             - "decoder\\.de_convs\\.[012]\\.(point|depth)_act\\.weight" # prelu
    #             - "decoder\\.de_convs\\.3\\.act\\.weight"                   # prelu
    #             - "decoder\\.de_convs\\.4\\.bn\\.weight"                    # weight before tanh
    #         weight_decay: 0       # optimizer_kwargs to update
    #         project: False
    #     -
    #         regex_list:
    #             - "encoder\\.en_convs\\.[01]\\.conv\\.weight"               # conv2d before BN
    #             - "encoder\\.en_convs\\.[234]\\.point_conv[12]\\.weight"    # conv2d before BN
    #             - "encoder\\.en_convs\\.[234]\\.depth_conv\\.weight"        # conv2d before BN
    #             - "decoder\\.de_convs\\.[012]\\.point_conv[12]\\.weight"    # conv2d before BN
    #             - "decoder\\.de_convs\\.[012]\\.depth_conv\\.weight"        # conv2d before BN
    #             - "decoder\\.de_convs\\.[34]\\.conv\\.weight"               # conv2d before BN
    #         project_channel: True
    scheduler: CosineAnnealingWarmup
    scheduler_kwargs:
        warmup_iterations: 500
        eta_min: 1.0e-6
        warn: False
valid:
    batch_size: 64
infer:
    batch_size: 1
    interval: 20
pesq:
    batch_size: 16
    num_workers: 0              # num_workers for a dataloader
    num_workers_executor: 32    # num_workers for a multiprocess executor
    interval: 20
    metrics_to_calculate:
        pesq: True
        stoi: True
